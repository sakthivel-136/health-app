# -*- coding: utf-8 -*-
"""healthcheckerapp.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HF3HtWcbGulDItoUdLITLyXfq1P2dbK5
"""
mkdir .streamlit
[openai]
api_key = "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"


import openai
import streamlit as st

openai.api_key = st.secrets["openai"]["api_key"]

st.set_page_config(page_title="Health GPT Chatbot", layout="centered")

st.markdown("""
<style>
.chat-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 50%;
    padding: 20px;
    font-size: 24px;
    cursor: pointer;
    z-index: 9999;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}
.chatbox {
    position: fixed;
    bottom: 90px;
    right: 20px;
    width: 360px;
    max-height: 400px;
    overflow-y: auto;
    background-color: white;
    border: 2px solid #4CAF50;
    border-radius: 10px;
    padding: 15px;
    z-index: 9998;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
}
</style>
""", unsafe_allow_html=True)

if "show_chat" not in st.session_state:
    st.session_state.show_chat = False
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []

clicked = st.button("üí¨", key="toggle_button")
if clicked:
    st.session_state.show_chat = not st.session_state.show_chat

st.markdown('<div class="chat-button">üí¨</div>', unsafe_allow_html=True)

if st.session_state.show_chat:
    st.markdown('<div class="chatbox">', unsafe_allow_html=True)
    st.markdown("### ü§ñ Health Chatbot")

    user_input = st.text_input("Ask your health question:")

    if user_input:
        st.session_state.chat_history.append(("You", user_input))

        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "You are a helpful health assistant who answers questions about BMI, hydration, fitness, and wellness."},
                    {"role": "user", "content": user_input}
                ]
            )
            reply = response["choices"][0]["message"]["content"]
        except Exception as e:
            reply = f"‚ö†Ô∏è Error: {e}"

        st.session_state.chat_history.append(("Bot", reply))

    for sender, message in reversed(st.session_state.chat_history):
        st.markdown(f"**{sender}:** {message}")

    st.markdown('</div>', unsafe_allow_html=True)
